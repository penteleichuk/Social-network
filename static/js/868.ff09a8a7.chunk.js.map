{"version":3,"file":"static/js/868.ff09a8a7.chunk.js","mappings":"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","sources":["webpack://samurai/./src/components/Settings/Settings.module.css?96b0","components/Settings/Settings.tsx","components/Settings/SettingsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Settings_form__LBZRN\",\"itemCheckbox\":\"Settings_itemCheckbox__N1ATF\",\"item\":\"Settings_item__tNqqN\"};","import { useNavigate } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { Field, Form, Formik } from \"formik\";\nimport * as yup from 'yup';\nimport style from './Settings.module.css'\nimport { UpdateContactsRequestType, UpdateRequestType } from \"../../api/profileAPI\";\n\ntype onSaveHandlerType = {\n\tfullName: string;\n\taboutMe: string;\n\tlookingForAJob: boolean;\n\tlookingForAJobDescription: string;\n} & UpdateContactsRequestType;\n\nexport type SettingsPropsType = {\n\tprofile: UpdateRequestType\n\tuserId: number\n\tupdateHandler: (data: UpdateRequestType) => void\n};\n\nconst validationSchema = yup.object({\n\tfullName: yup.string().required('Required'),\n\taboutMe: yup.string().required('Required'),\n\tlookingForAJobDescription: yup.string().required('Required'),\n\tfacebook: yup.string(),\n\ttwitter: yup.string(),\n\tgithub: yup.string(),\n\tyoutube: yup.string(),\n\tlookingForAJob: yup.boolean(),\n});\n\nexport const Settings = (props: SettingsPropsType) => {\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tif (!props.userId) {\n\t\t\tnavigate('/login');\n\t\t}\n\t}, [navigate, props.userId])\n\n\tconst onSaveHandler = (data: onSaveHandlerType) => {\n\t\tconst requestData = {\n\t\t\tfullName: data.fullName,\n\t\t\taboutMe: data.aboutMe,\n\t\t\tlookingForAJob: data.lookingForAJob,\n\t\t\tlookingForAJobDescription: data.lookingForAJobDescription,\n\t\t\tcontacts: {\n\t\t\t\tfacebook: data.facebook,\n\t\t\t\ttwitter: data.twitter,\n\t\t\t\tgithub: data.github,\n\t\t\t\tyoutube: data.youtube,\n\t\t\t}\n\t\t}\n\n\t\tprops.updateHandler(requestData);\n\t}\n\n\treturn (\n\t\t<Formik initialValues={\n\t\t\t{\n\t\t\t\tfullName: props.profile.fullName,\n\t\t\t\taboutMe: props.profile.aboutMe,\n\t\t\t\tlookingForAJobDescription: props.profile.lookingForAJobDescription,\n\t\t\t\tfacebook: props.profile.contacts.facebook,\n\t\t\t\ttwitter: props.profile.contacts.twitter,\n\t\t\t\tgithub: props.profile.contacts.github,\n\t\t\t\tyoutube: props.profile.contacts.youtube,\n\t\t\t\tlookingForAJob: props.profile.lookingForAJob,\n\t\t\t}\n\t\t} validateOnBlur onSubmit={onSaveHandler} validationSchema={validationSchema}>\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, isValid, dirty, status }) => (\n\n\t\t\t\t<Form className={style.form}>\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"fullName\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Full Name: {touched.fullName && errors.fullName && <span>{errors.fullName}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"fullName\" value={values.fullName} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"aboutMe\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>About Me: {touched.aboutMe && errors.aboutMe && <span>{errors.aboutMe}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"aboutMe\" value={values.aboutMe} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"lookingForAJobDescription\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Description: {touched.lookingForAJobDescription && errors.lookingForAJobDescription && <span>{errors.lookingForAJobDescription}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"lookingForAJobDescription\" value={values.lookingForAJobDescription} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"facebook\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Facebook: {touched.facebook && errors.facebook && <span>{errors.facebook}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"contacts.facebook\" value={values.facebook} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"twitter\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Twitter: {touched.twitter && errors.twitter && <span>{errors.twitter}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"contacts.twitter\" value={values.twitter} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"github\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Github: {touched.github && errors.github && <span>{errors.github}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"github\" value={values.github} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<label htmlFor=\"contacts.youtube\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Youtube: {touched.youtube && errors.youtube && <span>{errors.youtube}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"youtube\" value={values.youtube} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.itemCheckbox}>\n\t\t\t\t\t\t<span style={{ display: \"inline-block\" }} className={style.formLabelText}>Looking for a job</span>\n\t\t\t\t\t\t<Field type=\"checkbox\" name=\"lookingForAJob\" onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{status?.error && <div className={style.formError}>{status.error}</div>}\n\n\t\t\t\t\t<div className={style.item}>\n\t\t\t\t\t\t<button className={style.formButton} type={'submit'} disabled={!isValid && !dirty}>Save settings</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}","import React from \"react\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { Settings } from \"./Settings\";\nimport { compose } from \"redux\";\nimport { connect } from 'react-redux';\nimport { getProfile, updateProfile } from \"../../redux/reducers/profile-reducer\";\nimport { ProfilePropsType, UpdateRequestType } from \"../../api/profileAPI\";\n\nclass SettingsContainer extends React.Component<SettingsPropsType, mapStateToPropsType> {\n\n\tprofile = {\n\t\tfullName: this.props.profile.fullName,\n\t\taboutMe: this.props.profile.aboutMe,\n\t\tlookingForAJob: this.props.profile.lookingForAJob,\n\t\tlookingForAJobDescription: this.props.profile.lookingForAJobDescription,\n\t\tcontacts: {\n\t\t\tfacebook: this.props.profile.contacts.facebook,\n\t\t\ttwitter: this.props.profile.contacts.twitter,\n\t\t\tgithub: this.props.profile.contacts.github,\n\t\t\tyoutube: this.props.profile.contacts.youtube,\n\t\t},\n\t}\n\n\tcomponentDidMount(): void {\n\t\tthis.props.getProfile(this.props.userId);\n\t}\n\n\trender(): React.ReactNode {\n\t\treturn <Settings\n\t\t\tuserId={this.props.userId}\n\t\t\tupdateHandler={this.props.updateProfile}\n\t\t\tprofile={this.profile} />\n\t}\n}\n\ntype mapStateToPropsType = {\n\tprofile: ProfilePropsType,\n\tuserId: number\n}\n\ntype mapDispatchToPropsType = {\n\tgetProfile: (userId: number) => void\n\tupdateProfile: (data: UpdateRequestType) => void\n}\n\n// Props connect\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n\treturn {\n\t\tprofile: state.profilePage.profile,\n\t\tuserId: state.auth.userId,\n\t}\n}\n\nconst mapDispatchToProps: mapDispatchToPropsType = {\n\tgetProfile, updateProfile\n};\n\nexport type SettingsPropsType = mapDispatchToPropsType & mapStateToPropsType;\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps))(SettingsContainer);"],"names":["validationSchema","yup","fullName","required","aboutMe","lookingForAJobDescription","facebook","twitter","github","youtube","lookingForAJob","Settings","props","navigate","useNavigate","useEffect","userId","initialValues","profile","contacts","validateOnBlur","onSubmit","data","requestData","updateHandler","values","errors","touched","handleChange","handleBlur","isValid","dirty","status","className","style","htmlFor","type","name","value","onBlur","onChange","display","error","disabled","SettingsContainer","this","getProfile","updateProfile","React","mapDispatchToProps","compose","connect","state","profilePage","auth"],"sourceRoot":""}