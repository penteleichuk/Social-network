{"version":3,"file":"static/js/376.43337eef.chunk.js","mappings":"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","sources":["webpack://samurai/./src/components/Form/Form.module.css?89ba","components/Form/LoginForm.tsx","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"formTitle\":\"Form_formTitle__b3yEU\",\"formDescription\":\"Form_formDescription__+hfat\",\"formWrapper\":\"Form_formWrapper__IATQt\",\"formLabelText\":\"Form_formLabelText__-26M+\",\"input\":\"Form_input__FTtTw\",\"formButton\":\"Form_formButton__7mGGM\",\"formError\":\"Form_formError__LCMxE\"};","\nimport { Field, Form, Formik, FormikValues } from 'formik'\nimport { LoginPropsType } from '../Login/Login';\nimport * as yup from 'yup';\nimport style from './Form.module.css'\n\ntype LoginFormTypeProps = {\n\tonSubmit: (values: LoginPropsType, actions: FormikValues) => void;\n\tcaptcha: string | null\n}\n\nconst validationSchema = yup.object({\n\tlogin: yup.string().typeError('Invalid login').required('Required'),\n\tpassword: yup.string().min(4, \"Must be longer than 2 characters\").max(20).required(\"Required\"),\n\tremember: yup.boolean(),\n\tcaptcha: yup.string(),\n});\n\nconst formikInitail = { login: '', password: '', remember: false, captcha: '', error: '' };\n\nexport const LoginForm = (props: LoginFormTypeProps) => {\n\tconst { onSubmit, captcha } = props;\n\n\treturn (\n\t\t<Formik initialValues={formikInitail} validateOnBlur onSubmit={onSubmit} validationSchema={validationSchema}>\n\t\t\t{({ values, errors, touched, handleChange, handleBlur, isValid, dirty, status }) => (\n\n\t\t\t\t<Form className={style.form}>\n\t\t\t\t\t<h1 className={style.formTitle}>Auth</h1>\n\t\t\t\t\t<p className={style.formDescription}>You are welcome!</p>\n\t\t\t\t\t<div className={style.formWrapper}>\n\t\t\t\t\t\t<label htmlFor=\"login\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Login: {touched.login && errors.login && <span>{errors.login}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"login\" placeholder={'login'} value={values.login} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className={style.formWrapper}>\n\t\t\t\t\t\t<label htmlFor=\"password\" className={style.formLabel}>\n\t\t\t\t\t\t\t<span className={style.formLabelText}>Password: {touched.password && errors.password && <span>{errors.password}</span>}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<Field className={style.input} type=\"password\" name=\"password\" placeholder={'password'} value={values.password} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{captcha &&\n\t\t\t\t\t\t<div className={style.formWrapper}>\n\t\t\t\t\t\t\t<label htmlFor=\"password\" className={style.formLabel}>\n\t\t\t\t\t\t\t\t<span className={style.formLabelText}>Captcha: {touched.captcha && errors.captcha && <span>{errors.captcha}</span>}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Field className={style.input} type=\"text\" name=\"captcha\" value={values.captcha} onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t\t\t<img style={{ marginTop: \"10px\" }} src={captcha} alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t<div className={style.formWrapper}>\n\t\t\t\t\t\t<Field type=\"checkbox\" name=\"remember\" onBlur={handleBlur} onChange={handleChange} />\n\t\t\t\t\t\t<span style={{ display: \"inline-block\" }} className={style.formLabelText}>Remember me?</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{status?.error && <div className={style.formError}>{status.error}</div>}\n\n\t\t\t\t\t<div className={style.formWrapper}>\n\t\t\t\t\t\t<button className={style.formButton} type={'submit'} disabled={!isValid && !dirty}>Login</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n}","import { FormikValues } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { login } from \"../../redux/reducers/auth-reducer\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { LoginForm } from \"../Form/LoginForm\";\n\nexport type LoginPropsType = {\n  login: string\n  password: string\n  remember: boolean\n  captcha: string\n}\n\nconst Login = (props: (mapStateToPropsType & mapDispatchToPropsType)) => {\n  if (props.isAuth) {\n    return <Navigate to={'/profile'} />\n  }\n\n  return <LoginForm onSubmit={props.login} captcha={props.captcha} />\n}\n\ntype mapDispatchToPropsType = {\n  login: (values: LoginPropsType, actions: FormikValues) => void\n}\n\nconst mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => {\n  return {\n    login: (values: LoginPropsType, actions: FormikValues) => dispatch(login(values, actions))\n  }\n}\n\ntype mapStateToPropsType = {\n  isAuth: boolean\n  captcha: string | null\n}\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n    captcha: state.auth.captcha,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"],"names":["validationSchema","yup","login","typeError","required","password","min","max","remember","captcha","formikInitail","error","LoginForm","props","onSubmit","initialValues","validateOnBlur","values","errors","touched","handleChange","handleBlur","isValid","dirty","status","className","style","htmlFor","type","name","placeholder","value","onBlur","onChange","marginTop","src","alt","display","disabled","connect","state","isAuth","auth","dispatch","actions","to"],"sourceRoot":""}